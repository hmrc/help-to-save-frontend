# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName = "help-to-save-frontend"
application.router = prod.Routes

application.global = uk.gov.hmrc.helptosavefrontend.config.FrontendGlobal

play.ws.ssl {
  # timeout.request = 60000
  trustManager = {
    stores = [
      # Play seems to be loading default truststore without requiring any explicit config or password...
      #{
      # path: ${java.home}/lib/security/cacerts, # Default trust store
      # password = ${microservice.services.nsi.server.base64TruststorePassword}, # Default trust store password
      # }
      {
        data = ${microservice.services.nsi.server.base64Certificate}
      }
    ]
  }
  keyManager = {
    stores = [
      {
        type = ${microservice.services.nsi.client.base64KeystoreType}
        password = ${microservice.services.nsi.client.base64KeystorePassword}
        data = ${microservice.services.nsi.client.base64Keystore}
      }
    ]
  }

  debug = {
    certpath = false
    ocsp = false
    ssl = false
    sslctx = false
    defaultctx = false
    handshake = false
    verbose = false
    data = false
    keymanager = false
    trustmanager = false
  }
}

# prevent Play upgrades from tightening these on future upgrades
# TODO fix syntax and uncomment
#play.ws.ssl.disabledSignatureAlgorithms = "MD2, MD4, MD5"
#play.ws.ssl.disabledKeyAlgorithms = "DHE keySize < 2048, ECDH keySize < 2048, ECDHE keySize < 2048, RSA keySize < 2048, DSA keySize < 2048, EC keySize < 224"


play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "uk.gov.hmrc.helptosavefrontend.config.CustomWSConfigParserModule"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

# As we need to be compatable with other services that don't use this key we have removed it. Putting this back will cause login loops locally
//play.crypto.secret="cP4kRt7cFjwijqreaIQySFvIympS4xkVBoXDE1NYRnbG4fH3UWpYypm9oUmnhouq"
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

feature-toggles {
  outgoing-json-validation {
    enabled = true
  }

  log-account-creation-json {
    enabled = false
  }
}

schema = """
{
  "$schema": "http://json-schema.org/schema#",
  "description": "A JSON schema to validate JSON as described in PPM-30048-UEM009-ICD001-HTS-HMRC-Interfaces v1.2.docx",

  "type" : "object",
  "additionalProperties": false,
  "required": ["forename", "surname", "dateOfBirth", "contactDetails", "registrationChannel", "nino"],
  "properties" : {
    "forename" : {
      "type" : "string",
      "minLength": 1,
      "maxLength": 26
    },
    "surname": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300
    },
    "dateOfBirth": {
      "type": "string",
      "minLength": 8,
      "maxLength": 8,
      "pattern": "^[0-9]{4}(01|02|03|04|05|06|07|08|09|10|11|12)[0-9]{2}$"
    },
    "contactDetails": {
      "type": "object",
      "additionalProperties": false,
      "required": ["address1", "address2", "postcode", "communicationPreference"],
      "properties": {
        "countryCode": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[A-Z][A-Z]"
        },
        "address1": {
          "type": "string",
          "maxLength": 35
        },
        "address2": {
          "type": "string",
          "maxLength": 35
        },
        "address3": {
          "type": "string",
          "maxLength": 35
        },
        "address4": {
          "type": "string",
          "maxLength": 35
        },
        "address5": {
          "type": "string",
          "maxLength": 35
        },
        "postcode": {
          "type": "string",
          "maxLength": 10
        },
        "communicationPreference": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "00|02"
        },
        "phoneNumber": {
          "type": "string",
          "maxLength": 15
        },
        "email": {
          "type": "string",
          "maxLength": 254,
          "pattern": "^.{1,64}@.{1,252}$"
        }
      }
    },
    "registrationChannel": {
      "type": "string",
      "maxLength": 10,
      "pattern": "^online$|^callCentre$"
    },
    "nino" : {
      "type" : "string",
      "minLength": 9,
      "maxLength": 9,
      "pattern": "^(([A-CEGHJ-PR-TW-Z][A-CEGHJ-NPR-TW-Z])([0-9]{2})([0-9]{2})([0-9]{2})([A-D]{1})|((XX)(99)(99)(99)(X)))$"
    }
  }
}
"""

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    identity-verification-frontend {
      url = "http://localhost:9948"
    }

    company-auth-frontend {
      url = "http://localhost:9025/gg"
    }

    help-to-save {
      host = localhost
      port = 7001
    }

    help-to-save-check-eligibility {
      url = "http://localhost:7000/help-to-save/register/check-eligibility"
    }

    help-to-save-access-account {
      url = "http://localhost:7000/help-to-save/access-account"
    }

    identity-callback {
      url = "http://localhost:7000/help-to-save/iv/journey-result"
    }

    keystore {
      host = localhost
      port = 8400
      domain = keystore
      session-key = htsSession
    }

    nsi {
      host = localhost
      port = 7002
      create-account-url = "/nsihts/createaccount"
      update-email-url   = "/nsihts/updateemail"
      client {
        base64KeystoreType = "jks"
        base64KeystorePassword = ""
        base64Keystore = ""
      }
      server {
        base64Certificate = ""
        base64TruststorePassword = ""
      }
      authorization {
        # the key of the entry in the authorization header in the request going to NS&I -
        # set to 'Authorization1` for local devleopment
        header-key = "Authorization1"
        Base64User = "user"
        Base64Password = "password"
        encoding = "UTF-8"
      }
    }

    pertax-frontend {
      url = "http://localhost:9232/personal-account"
    }

    feedback-survey {
      url = "http://localhost:9514/feedback-survey"
    }

    //using the stub in local and dev environments
    email-verification {
      host = localhost
      port = 7002
      linkTTLMinutes = 120
      continue-url {
        new-applicant  = "http://localhost:7000/help-to-save/email-verified"
        account-holder = "http://localhost:7000/help-to-save/account/email-verified"
      }
    }
  }

}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = NANOSECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = "UA-43414424-32"
  host = auto
}

assets {
  version = "2.246.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}

# TODO - needs an override entry in each app-config-* file
proxy {
  proxyRequiredForThisEnvironment = false
  username = username
  password = password
  protocol = http
  host = localhost
  port = 3128
}

mongodb {
  uri = "mongodb://localhost:27017/help-to-save"
}

# must be a Base64 encoded string of 128/192/256 bits
crypto.encryption-key = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
